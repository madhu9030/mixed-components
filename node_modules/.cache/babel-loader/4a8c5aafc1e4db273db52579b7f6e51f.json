{"ast":null,"code":"import React from \"react\"; //Password must contain at least 7 charactors\n\nconst PasswordValidation = (e, setPassword, password, setErrors, errors) => {\n  setPassword(e.target.value);\n  console.log(password);\n  debugger;\n\n  if (password.length < 7) {\n    setErrors(errors.map(error => {\n      error: \"Password must contain at least 7 charactors\";\n\n      id: \"length\";\n    }));\n  } else {\n    setErrors(errors.map(error => error = \"\"));\n  } //   if (password.length >= 7 && !password.includes(\"@\")) {\n  //     setErrors(\n  //       (e) => (e[1] = [\"Password must contain '@' as special charactors\"])\n  //     );\n  //   } else {\n  //     setErrors((e) => (e[1] = [\"\"]));\n  //   }\n\n};\n\nexport default PasswordValidation;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/validations/passwordValidation.js"],"names":["React","PasswordValidation","e","setPassword","password","setErrors","errors","target","value","console","log","length","map","error","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAIC,WAAJ,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,MAAtC,KAAiD;AAC1EH,EAAAA,WAAW,CAACD,CAAC,CAACK,MAAF,CAASC,KAAV,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA;;AACA,MAAIA,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACvBN,IAAAA,SAAS,CACPC,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AACpBA,MAAAA,KAAK,EAAE;;AACPC,MAAAA,EAAE,EAAE;AACL,KAHD,CADO,CAAT;AAMD,GAPD,MAOO;AACLT,IAAAA,SAAS,CAACC,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAYA,KAAK,GAAG,EAA/B,CAAD,CAAT;AACD,GAbyE,CAc1E;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CArBD;;AAuBA,eAAeZ,kBAAf","sourcesContent":["import React from \"react\";\n\n//Password must contain at least 7 charactors\nconst PasswordValidation = (e, setPassword, password, setErrors, errors) => {\n  setPassword(e.target.value);\n  console.log(password);\n  debugger;\n  if (password.length < 7) {\n    setErrors(\n      errors.map((error) => {\n        error: \"Password must contain at least 7 charactors\";\n        id: \"length\";\n      })\n    );\n  } else {\n    setErrors(errors.map((error) => (error = \"\")));\n  }\n  //   if (password.length >= 7 && !password.includes(\"@\")) {\n  //     setErrors(\n  //       (e) => (e[1] = [\"Password must contain '@' as special charactors\"])\n  //     );\n  //   } else {\n  //     setErrors((e) => (e[1] = [\"\"]));\n  //   }\n};\n\nexport default PasswordValidation;\n"]},"metadata":{},"sourceType":"module"}