{"ast":null,"code":"import React from \"react\";\n\nconst reducer = (state, action) => {\n  console.log(state);\n\n  switch (action.type) {\n    case \"add\":\n      return [...state, {\n        text: action.payload,\n        id: Math.floor(Math.random() * 100),\n        done: false\n      }];\n\n    case \"remove\":\n      return state.filter(todo => todo.id !== action.id);\n\n    case \"done\":\n      return state.filter(todo => {\n        debugger;\n\n        if (todo.id !== action.id) {\n          return [...state, {\n            done: !todo.done\n          }];\n        }\n\n        return todo;\n      });\n\n    default:\n      break;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/addition/reducer.js"],"names":["React","reducer","state","action","console","log","type","text","payload","id","Math","floor","random","done","filter","todo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,KAAL;AACE,aAAO,CACL,GAAGJ,KADE,EAEL;AACEK,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OADf;AAEEC,QAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAFN;AAGEC,QAAAA,IAAI,EAAE;AAHR,OAFK,CAAP;;AAQF,SAAK,QAAL;AACE,aAAOX,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYN,MAAM,CAACM,EAA1C,CAAP;;AACF,SAAK,MAAL;AACE,aAAOP,KAAK,CAACY,MAAN,CAAcC,IAAD,IAAU;AAC5B;;AACA,YAAIA,IAAI,CAACN,EAAL,KAAYN,MAAM,CAACM,EAAvB,EAA2B;AACzB,iBAAO,CAAC,GAAGP,KAAJ,EAAW;AAAEW,YAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AAAd,WAAX,CAAP;AACD;;AACD,eAAOE,IAAP;AACD,OANM,CAAP;;AAOF;AACE;AArBJ;AAuBD,CAzBD;;AA2BA,eAAed,OAAf","sourcesContent":["import React from \"react\";\n\nconst reducer = (state, action) => {\n  console.log(state);\n  switch (action.type) {\n    case \"add\":\n      return [\n        ...state,\n        {\n          text: action.payload,\n          id: Math.floor(Math.random() * 100),\n          done: false,\n        },\n      ];\n    case \"remove\":\n      return state.filter((todo) => todo.id !== action.id);\n    case \"done\":\n      return state.filter((todo) => {\n        debugger;\n        if (todo.id !== action.id) {\n          return [...state, { done: !todo.done }];\n        }\n        return todo;\n      });\n    default:\n      break;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}