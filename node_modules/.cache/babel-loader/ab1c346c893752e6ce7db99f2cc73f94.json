{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/textField/textField.js\";\nimport React from \"react\";\n\nconst TextField = ({\n  inputLabel = \"Enter the value\",\n  buttonLabel,\n  inputAttrs,\n  buttonAttrs,\n  labelAttrs,\n  setInput,\n  input,\n  clickHandler,\n  loading,\n  error,\n  type,\n  errorMessage,\n  onBlur,\n  disabled,\n  id\n}, ref) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textfeild-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, inputAttrs, {\n    id: id,\n    disabled: disabled,\n    type: type,\n    className: input ? \"focused textfeild-box\" : \"textfeild-box\",\n    onBlur: e => onBlur(e),\n    onChange: e => setInput(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)),\n    value: input,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", Object.assign({\n    className: \"textfeild-label\"\n  }, labelAttrs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), inputLabel), buttonLabel ? !loading ? /*#__PURE__*/React.createElement(\"button\", Object.assign({}, buttonAttrs, {\n    onClick: clickHandler,\n    className: \"textfield-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), buttonLabel) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }) : \"\", errorMessage && error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-exclamation-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), errorMessage.map(error => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, error))) : \"\");\n};\n\nconst forwardRefInput = React.forwardRef(TextField);\nexport default forwardRefInput;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/textField/textField.js"],"names":["React","TextField","inputLabel","buttonLabel","inputAttrs","buttonAttrs","labelAttrs","setInput","input","clickHandler","loading","error","type","errorMessage","onBlur","disabled","id","ref","e","target","value","charAt","toUpperCase","slice","map","forwardRefInput","forwardRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,UAAU,GAAG,iBADf;AAEEC,EAAAA,WAFF;AAGEC,EAAAA,UAHF;AAIEC,EAAAA,WAJF;AAKEC,EAAAA,UALF;AAMEC,EAAAA,QANF;AAOEC,EAAAA,KAPF;AAQEC,EAAAA,YARF;AASEC,EAAAA,OATF;AAUEC,EAAAA,KAVF;AAWEC,EAAAA,IAXF;AAYEC,EAAAA,YAZF;AAaEC,EAAAA,MAbF;AAcEC,EAAAA,QAdF;AAeEC,EAAAA;AAfF,CADgB,EAkBhBC,GAlBgB,KAmBb;AACH,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,+CACMb,UADN;AAEE,IAAA,EAAE,EAAEY,EAFN;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,IAAI,EAAEH,IAJR;AAKE,IAAA,SAAS,EAAEJ,KAAK,GAAG,uBAAH,GAA6B,eAL/C;AAME,IAAA,MAAM,EAAGU,CAAD,IAAOJ,MAAM,CAACI,CAAD,CANvB;AAOE,IAAA,QAAQ,EAAGA,CAAD,IACRX,QAAQ,CACNW,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,CAArB,CADnC,CARZ;AAYE,IAAA,KAAK,EAAEf,KAZT;AAaE,IAAA,GAAG,EAAES,GAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAgBE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAuCX,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,UADH,CAhBF,EAmBGC,WAAW,GACV,CAACO,OAAD,gBACE,gDACML,WADN;AAEE,IAAA,OAAO,EAAEI,YAFX;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGN,WALH,CADF,gBASE;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVQ,GAaV,EAhCJ,EAkCGU,YAAY,IAAIF,KAAhB,gBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGE,YAAY,CAACW,GAAb,CAAkBb,KAAD,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,CADD,CAFH,CADD,GAQC,EA1CJ,CADF;AA+CD,CAnED;;AAqEA,MAAMc,eAAe,GAAGzB,KAAK,CAAC0B,UAAN,CAAiBzB,SAAjB,CAAxB;AAEA,eAAewB,eAAf","sourcesContent":["import React from \"react\";\nconst TextField = (\n  {\n    inputLabel = \"Enter the value\",\n    buttonLabel,\n    inputAttrs,\n    buttonAttrs,\n    labelAttrs,\n    setInput,\n    input,\n    clickHandler,\n    loading,\n    error,\n    type,\n    errorMessage,\n    onBlur,\n    disabled,\n    id,\n  },\n  ref\n) => {\n  return (\n    <div className=\"textfeild-wrapper\">\n      <input\n        {...inputAttrs}\n        id={id}\n        disabled={disabled}\n        type={type}\n        className={input ? \"focused textfeild-box\" : \"textfeild-box\"}\n        onBlur={(e) => onBlur(e)}\n        onChange={(e) =>\n          setInput(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)\n          )\n        }\n        value={input}\n        ref={ref}\n      />\n      <label className=\"textfeild-label\" {...labelAttrs}>\n        {inputLabel}\n      </label>\n      {buttonLabel ? (\n        !loading ? (\n          <button\n            {...buttonAttrs}\n            onClick={clickHandler}\n            className=\"textfield-button\"\n          >\n            {buttonLabel}\n          </button>\n        ) : (\n          <i className=\"spinner\"></i>\n        )\n      ) : (\n        \"\"\n      )}\n      {errorMessage && error ? (\n        <div className=\"error-message\">\n          <i className=\"fas fa-exclamation-circle\"></i>\n          {errorMessage.map((error) => (\n            <span>{error}</span>\n          ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst forwardRefInput = React.forwardRef(TextField);\n\nexport default forwardRefInput;\n"]},"metadata":{},"sourceType":"module"}