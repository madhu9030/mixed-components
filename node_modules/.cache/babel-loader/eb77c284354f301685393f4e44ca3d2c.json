{"ast":null,"code":"import React from\"react\";var TextField=function TextField(_ref,ref){var _ref$inputLabel=_ref.inputLabel,inputLabel=_ref$inputLabel===void 0?\"Enter the value\":_ref$inputLabel,buttonLabel=_ref.buttonLabel,inputAttrs=_ref.inputAttrs,buttonAttrs=_ref.buttonAttrs,labelAttrs=_ref.labelAttrs,setInput=_ref.setInput,input=_ref.input,clickHandler=_ref.clickHandler,loading=_ref.loading,error=_ref.error,type=_ref.type,errorMessage=_ref.errorMessage,_onBlur=_ref.onBlur,disabled=_ref.disabled,id=_ref.id;return/*#__PURE__*/React.createElement(\"div\",{className:\"textfeild-wrapper\"},/*#__PURE__*/React.createElement(\"input\",Object.assign({},inputAttrs,{id:id,disabled:disabled,type:type,className:input?\"focused textfeild-box\":\"textfeild-box\",onBlur:function onBlur(e){return _onBlur(e);},onChange:function onChange(e){return setInput(e.target.value.charAt(0).toUpperCase()+e.target.value.slice(1));},required:true,value:input,ref:ref})),/*#__PURE__*/React.createElement(\"label\",Object.assign({className:\"textfeild-label\"},labelAttrs),inputLabel),buttonLabel?!loading?/*#__PURE__*/React.createElement(\"button\",Object.assign({},buttonAttrs,{onClick:clickHandler,className:\"textfield-button\"}),buttonLabel):/*#__PURE__*/React.createElement(\"i\",{className:\"spinner\"}):\"\",errorMessage&&error?/*#__PURE__*/React.createElement(\"div\",{className:\"error-message\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-exclamation-circle\"}),errorMessage.map(function(error){return/*#__PURE__*/React.createElement(\"span\",null,error);})):\"\");};var forwardRefInput=React.forwardRef(TextField);export default forwardRefInput;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/textField/textField.js"],"names":["React","TextField","ref","inputLabel","buttonLabel","inputAttrs","buttonAttrs","labelAttrs","setInput","input","clickHandler","loading","error","type","errorMessage","onBlur","disabled","id","e","target","value","charAt","toUpperCase","slice","map","forwardRefInput","forwardRef"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAkBhBC,GAlBgB,CAmBb,0BAjBDC,UAiBC,CAjBDA,UAiBC,0BAjBY,iBAiBZ,iBAhBDC,WAgBC,MAhBDA,WAgBC,CAfDC,UAeC,MAfDA,UAeC,CAdDC,WAcC,MAdDA,WAcC,CAbDC,UAaC,MAbDA,UAaC,CAZDC,QAYC,MAZDA,QAYC,CAXDC,KAWC,MAXDA,KAWC,CAVDC,YAUC,MAVDA,YAUC,CATDC,OASC,MATDA,OASC,CARDC,KAQC,MARDA,KAQC,CAPDC,IAOC,MAPDA,IAOC,CANDC,YAMC,MANDA,YAMC,CALDC,OAKC,MALDA,MAKC,CAJDC,QAIC,MAJDA,QAIC,CAHDC,EAGC,MAHDA,EAGC,CACH,mBACE,2BAAK,SAAS,CAAC,mBAAf,eACE,6CACMZ,UADN,EAEE,EAAE,CAAEY,EAFN,CAGE,QAAQ,CAAED,QAHZ,CAIE,IAAI,CAAEH,IAJR,CAKE,SAAS,CAAEJ,KAAK,CAAG,uBAAH,CAA6B,eAL/C,CAME,MAAM,CAAE,gBAACS,CAAD,QAAOH,CAAAA,OAAM,CAACG,CAAD,CAAb,EANV,CAOE,QAAQ,CAAE,kBAACA,CAAD,QACRV,CAAAA,QAAQ,CACNU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,GAAyCJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,CAArB,CADnC,CADA,EAPZ,CAYE,QAAQ,KAZV,CAaE,KAAK,CAAEd,KAbT,CAcE,GAAG,CAAEP,GAdP,GADF,cAiBE,2CAAO,SAAS,CAAC,iBAAjB,EAAuCK,UAAvC,EACGJ,UADH,CAjBF,CAoBGC,WAAW,CACV,CAACO,OAAD,cACE,8CACML,WADN,EAEE,OAAO,CAAEI,YAFX,CAGE,SAAS,CAAC,kBAHZ,GAKGN,WALH,CADF,cASE,yBAAG,SAAS,CAAC,SAAb,EAVQ,CAaV,EAjCJ,CAmCGU,YAAY,EAAIF,KAAhB,cACC,2BAAK,SAAS,CAAC,eAAf,eACE,yBAAG,SAAS,CAAC,2BAAb,EADF,CAEGE,YAAY,CAACU,GAAb,CAAiB,SAACZ,KAAD,qBAChB,gCAAOA,KAAP,CADgB,EAAjB,CAFH,CADD,CAQC,EA3CJ,CADF,CAgDD,CApED,CAsEA,GAAMa,CAAAA,eAAe,CAAGzB,KAAK,CAAC0B,UAAN,CAAiBzB,SAAjB,CAAxB,CAEA,cAAewB,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nconst TextField = (\n  {\n    inputLabel = \"Enter the value\",\n    buttonLabel,\n    inputAttrs,\n    buttonAttrs,\n    labelAttrs,\n    setInput,\n    input,\n    clickHandler,\n    loading,\n    error,\n    type,\n    errorMessage,\n    onBlur,\n    disabled,\n    id,\n  },\n  ref\n) => {\n  return (\n    <div className=\"textfeild-wrapper\">\n      <input\n        {...inputAttrs}\n        id={id}\n        disabled={disabled}\n        type={type}\n        className={input ? \"focused textfeild-box\" : \"textfeild-box\"}\n        onBlur={(e) => onBlur(e)}\n        onChange={(e) =>\n          setInput(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)\n          )\n        }\n        required\n        value={input}\n        ref={ref}\n      />\n      <label className=\"textfeild-label\" {...labelAttrs}>\n        {inputLabel}\n      </label>\n      {buttonLabel ? (\n        !loading ? (\n          <button\n            {...buttonAttrs}\n            onClick={clickHandler}\n            className=\"textfield-button\"\n          >\n            {buttonLabel}\n          </button>\n        ) : (\n          <i className=\"spinner\"></i>\n        )\n      ) : (\n        \"\"\n      )}\n      {errorMessage && error ? (\n        <div className=\"error-message\">\n          <i className=\"fas fa-exclamation-circle\"></i>\n          {errorMessage.map((error) => (\n            <span>{error}</span>\n          ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst forwardRefInput = React.forwardRef(TextField);\n\nexport default forwardRefInput;\n"]},"metadata":{},"sourceType":"module"}