{"ast":null,"code":"import _objectSpread from\"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";var reducer=function reducer(state,action){console.log(state);switch(action.type){case\"add\":return[].concat(_toConsumableArray(state),[{text:action.payload,id:Math.floor(Math.random()*100),done:false}]);case\"remove\":return state.filter(function(todo){return todo.id!==action.id;});case\"done\":return state.map(function(todo){debugger;if(todo.id===action.id){return _objectSpread(_objectSpread({},todo),{},{done:!todo.done});}return todo;});default:return state;}};export default reducer;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/addition/reducer.js"],"names":["React","reducer","state","action","console","log","type","text","payload","id","Math","floor","random","done","filter","todo","map"],"mappings":"6VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACjCC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACA,OAAQC,MAAM,CAACG,IAAf,EACE,IAAK,KAAL,CACE,mCACKJ,KADL,GAEE,CACEK,IAAI,CAAEJ,MAAM,CAACK,OADf,CAEEC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,GAA3B,CAFN,CAGEC,IAAI,CAAE,KAHR,CAFF,GAQF,IAAK,QAAL,CACE,MAAOX,CAAAA,KAAK,CAACY,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACN,EAAL,GAAYN,MAAM,CAACM,EAA7B,EAAb,CAAP,CACF,IAAK,MAAL,CACE,MAAOP,CAAAA,KAAK,CAACc,GAAN,CAAU,SAACD,IAAD,CAAU,CACzB,SACA,GAAIA,IAAI,CAACN,EAAL,GAAYN,MAAM,CAACM,EAAvB,CAA2B,CACzB,sCAAYM,IAAZ,MAAkBF,IAAI,CAAE,CAACE,IAAI,CAACF,IAA9B,GACD,CACD,MAAOE,CAAAA,IAAP,CACD,CANM,CAAP,CAOF,QACE,MAAOb,CAAAA,KAAP,CArBJ,CAuBD,CAzBD,CA2BA,cAAeD,CAAAA,OAAf","sourcesContent":["import React from \"react\";\n\nconst reducer = (state, action) => {\n  console.log(state);\n  switch (action.type) {\n    case \"add\":\n      return [\n        ...state,\n        {\n          text: action.payload,\n          id: Math.floor(Math.random() * 100),\n          done: false,\n        },\n      ];\n    case \"remove\":\n      return state.filter((todo) => todo.id !== action.id);\n    case \"done\":\n      return state.map((todo) => {\n        debugger;\n        if (todo.id === action.id) {\n          return { ...todo, done: !todo.done };\n        }\n        return todo;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}