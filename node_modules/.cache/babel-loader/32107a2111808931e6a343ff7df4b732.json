{"ast":null,"code":"import _toConsumableArray from\"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import WeatherEngine from\"./weather/weatherEngine.jsx\";import\"./App.scss\";import TextField from\"./components/textField/textField.js\";import TodoList from\"./components/todos/todoList\";import DropDown from\"./components/todos/dropDown\";import Loading from\"./components/loading/loading\";import NavBar from\"./components/navBar/navBar\";import GetRandomUser from\"./components/getRamdonUser/getRandomUser\";import Spinner from\"./components/spinner/spinner\";import Music from\"./components/music/music\";import Login from\"./components/login/login\";import Overlay from\"./components/overlay/overlay\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import Addition from\"./components/addition/addition\";import Main from\"./components/randomSite/main\";import dataProvider from\"./components/provider\";//API's\n/**\n * Dummy user data: https://reqres.in/api/users?page=2\n */function App(){//Local storage\nvar localTodos=[];useEffect(function(){if(JSON.parse(window.localStorage.getItem(\"localTodo\"))){localTodos=JSON.parse(localStorage.getItem(\"localTodo\"));setTodo(localTodos);// ref.current.focus();\n}},[]);var ref=useRef(null);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(localTodos),_useState4=_slicedToArray(_useState3,2),todo=_useState4[0],setTodo=_useState4[1];var _useState5=useState(\"All\"),_useState6=_slicedToArray(_useState5,2),select=_useState6[0],setSelect=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),filterList=_useState8[0],setFilterList=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setloading=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),edit=_useState12[0],setEdit=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),geteditId=_useState14[0],setgeteditId=_useState14[1];useEffect(function(){window.localStorage.setItem(\"localTodo\",JSON.stringify(todo));},[todo]);var dropDownHandler=function dropDownHandler(){switch(select){case\"Completed\":setFilterList(todo.filter(function(data){return data.completed===true;}));break;case\"Uncompleted\":setFilterList(todo.filter(function(data){return data.completed===false;}));break;default:return setFilterList(todo);}};useEffect(function(){dropDownHandler();},[select,todo]);var addTodoHandler=function addTodoHandler(){if(ref.current.value!==\"\"){setloading(true);setTimeout(function(){setloading(false);},200);if(edit&&geteditId){setTodo(todo.map(function(data){if(data.id.toString()===geteditId){return _objectSpread(_objectSpread({},data),{},{text:input});}return data;}));setEdit(false);}else{setTodo([].concat(_toConsumableArray(todo),[{text:input,id:Math.floor(Math.random()*1000),completed:false}]));}}setInput(\"\");ref.current.focus();};var inputAttrs={onKeyPress:function onKeyPress(event){if(event.charCode===13){addTodoHandler();}}};var name={first:\"madhu\",second:\"reddy\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Main,null));}export default App;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/App.js"],"names":["React","useState","useEffect","useRef","WeatherEngine","TextField","TodoList","DropDown","Loading","NavBar","GetRandomUser","Spinner","Music","Login","Overlay","BrowserRouter","Router","Switch","Route","Addition","Main","dataProvider","App","localTodos","JSON","parse","window","localStorage","getItem","setTodo","ref","input","setInput","todo","select","setSelect","filterList","setFilterList","loading","setloading","edit","setEdit","geteditId","setgeteditId","setItem","stringify","dropDownHandler","filter","data","completed","addTodoHandler","current","value","setTimeout","map","id","toString","text","Math","floor","random","focus","inputAttrs","onKeyPress","event","charCode","name","first","second"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport WeatherEngine from \"./weather/weatherEngine.jsx\";\nimport \"./App.scss\";\nimport TextField from \"./components/textField/textField.js\";\nimport TodoList from \"./components/todos/todoList\";\nimport DropDown from \"./components/todos/dropDown\";\nimport Loading from \"./components/loading/loading\";\nimport NavBar from \"./components/navBar/navBar\";\nimport GetRandomUser from \"./components/getRamdonUser/getRandomUser\";\nimport Spinner from \"./components/spinner/spinner\";\nimport Music from \"./components/music/music\";\nimport Login from \"./components/login/login\";\nimport Overlay from \"./components/overlay/overlay\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Addition from \"./components/addition/addition\";\nimport Main from \"./components/randomSite/main\";\nimport dataProvider from \"./components/provider\";\n//API's\n/**\n * Dummy user data: https://reqres.in/api/users?page=2\n */\n\nfunction App() {\n  //Local storage\n  let localTodos = [];\n  useEffect(() => {\n    if (JSON.parse(window.localStorage.getItem(\"localTodo\"))) {\n      localTodos = JSON.parse(localStorage.getItem(\"localTodo\"));\n      setTodo(localTodos);\n      // ref.current.focus();\n    }\n  }, []);\n\n  const ref = useRef(null);\n  const [input, setInput] = useState(\"\");\n  const [todo, setTodo] = useState(localTodos);\n  const [select, setSelect] = useState(\"All\");\n  const [filterList, setFilterList] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [geteditId, setgeteditId] = useState(null);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"localTodo\", JSON.stringify(todo));\n  }, [todo]);\n\n  const dropDownHandler = () => {\n    switch (select) {\n      case \"Completed\":\n        setFilterList(todo.filter((data) => data.completed === true));\n        break;\n      case \"Uncompleted\":\n        setFilterList(todo.filter((data) => data.completed === false));\n        break;\n      default:\n        return setFilterList(todo);\n    }\n  };\n\n  useEffect(() => {\n    dropDownHandler();\n  }, [select, todo]);\n\n  const addTodoHandler = () => {\n    if (ref.current.value !== \"\") {\n      setloading(true);\n      setTimeout(() => {\n        setloading(false);\n      }, 200);\n\n      if (edit && geteditId) {\n        setTodo(\n          todo.map((data) => {\n            if (data.id.toString() === geteditId) {\n              return { ...data, text: input };\n            }\n            return data;\n          })\n        );\n        setEdit(false);\n      } else {\n        setTodo([\n          ...todo,\n          {\n            text: input,\n            id: Math.floor(Math.random() * 1000),\n            completed: false,\n          },\n        ]);\n      }\n    }\n    setInput(\"\");\n    ref.current.focus();\n  };\n\n  const inputAttrs = {\n    onKeyPress: (event) => {\n      if (event.charCode === 13) {\n        addTodoHandler();\n      }\n    },\n  };\n\n  const name = {\n    first: \"madhu\",\n    second: \"reddy\",\n  };\n  return (\n    <>\n      {/* <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/home\">\n            <div className=\"flex\">Home</div>\n          </Route>\n          <Route path=\"/news\">\n            <div className=\"flex\">News</div>\n          </Route>\n          <Route path=\"/spinner\" component={Spinner} />\n          <Route path=\"/music\" component={Music} />\n          <Route path=\"/overlay\" component={Overlay} />\n          <Route path=\"/weather\">\n            <div className=\"weather-list\">\n              <WeatherEngine intialSearch=\"\" />\n              <WeatherEngine intialSearch=\"94086\" />\n              <WeatherEngine intialSearch=\"Hyderabad\" />\n              <WeatherEngine intialSearch=\"Barrow\" />\n            </div>\n          </Route>\n          <Route path=\"/todoapp\">\n            <dataProvider.Provider value={name}>\n              <div className=\"todo-app fade-in\">\n                <div className=\"text-field-dropdown\">\n                  <TextField\n                    buttonLabel={!edit ? \"Add Todo\" : \"Update\"}\n                    input={input}\n                    clickHandler={addTodoHandler}\n                    setInput={setInput}\n                    ref={ref}\n                    onBlur={() => null}\n                    inputAttrs={inputAttrs}\n                    loading={loading}\n                  />\n                  <DropDown setSelect={setSelect} select={select} />\n                </div>\n                {!edit ? (\n                  <TodoList\n                    todo={todo}\n                    input={input}\n                    setInput={setInput}\n                    filterList={filterList}\n                    setTodo={setTodo}\n                    edit={edit}\n                    setEdit={setEdit}\n                    inputRef={ref}\n                    setgeteditId={setgeteditId}\n                    geteditId={geteditId}\n                  />\n                ) : (\n                  <Loading text=\"Editing\" />\n                )}\n              </div>\n            </dataProvider.Provider>\n          </Route>\n          <Route path=\"/randomuser\" component={GetRandomUser} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </Router> */}\n      {/* <Addition /> */}\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}