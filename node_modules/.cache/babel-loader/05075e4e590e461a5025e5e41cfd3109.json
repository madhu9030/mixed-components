{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/addition/addition.js\";\nimport React, { useReducer, useState, useRef } from \"react\";\nimport reducer from \"./reducer\";\nimport PasswordValidation from \"../validations/passwordValidation\";\n\nconst Addition = () => {\n  const [state, dispatch] = useReducer(reducer, []);\n  const [input, setInput] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([\"\"]);\n  const inputRef = useRef(null);\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, state.count), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      dispatch({\n        type: \"add\",\n        payload: input\n      });\n      setInput(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    onChange: e => setInput(e.target.value),\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), state && state.map(todo => [/*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => dispatch({\n      type: \"remove\",\n      id: todo.id\n    }),\n    id: todo.id,\n    key: todo.id,\n    style: {\n      textDecoration: `${Boolean(todo.done) ? \"line-through\" : \"none\"}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"button\", {\n    key: `done${todo.id}`,\n    onClick: () => dispatch({\n      type: \"done\",\n      id: todo.id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, `${Boolean(todo.done) ? \"Completed\" : \"Complete\"}`)]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => PasswordValidation(e, setPassword, password, setErrors, errors),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, errors && errors.map(error => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, error)))));\n};\n\nexport default Addition;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/addition/addition.js"],"names":["React","useReducer","useState","useRef","reducer","PasswordValidation","Addition","state","dispatch","input","setInput","password","setPassword","errors","setErrors","inputRef","console","log","count","e","preventDefault","type","payload","target","value","map","todo","id","textDecoration","Boolean","done","text","error","color"],"mappings":"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","sourcesContent":["import React, { useReducer, useState, useRef } from \"react\";\nimport reducer from \"./reducer\";\nimport PasswordValidation from \"../validations/passwordValidation\";\n\nconst Addition = () => {\n    const [state, dispatch] = useReducer(reducer, []);\n    const [input, setInput] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([\"\"]);\n    const inputRef = useRef(null);\n    console.log(errors);\n    return (\n        <div>\n            <div>{state.count}</div>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    dispatch({ type: \"add\", payload: input });\n                    setInput(\"\");\n                }}\n            >\n                <input\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    ref={inputRef}\n                />\n            </form>\n\n            {state &&\n                state.map((todo) => [\n                    <span\n                        onClick={() =>\n                            dispatch({ type: \"remove\", id: todo.id })\n                        }\n                        id={todo.id}\n                        key={todo.id}\n                        style={{\n                            textDecoration: `${\n                                Boolean(todo.done) ? \"line-through\" : \"none\"\n                            }`,\n                        }}\n                    >\n                        {todo.text}\n                    </span>,\n                    <button\n                        key={`done${todo.id}`}\n                        onClick={() => dispatch({ type: \"done\", id: todo.id })}\n                    >\n                        {`${Boolean(todo.done) ? \"Completed\" : \"Complete\"}`}\n                    </button>,\n                ])}\n            <div>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) =>\n                        PasswordValidation(\n                            e,\n                            setPassword,\n                            password,\n                            setErrors,\n                            errors\n                        )\n                    }\n                />\n                <ul>\n                    {errors &&\n                        errors.map((error) => (\n                            <li style={{ color: \"red\" }}>{error}</li>\n                        ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Addition;\n"]},"metadata":{},"sourceType":"module"}