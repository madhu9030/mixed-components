{"ast":null,"code":"var _jsxFileName = \"/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/textField/textField.js\";\nimport React from \"react\";\n\nconst TextField = ({\n  inputLabel = \"Enter the value\",\n  buttonLabel,\n  inputAttrs,\n  buttonAttrs,\n  labelAttrs,\n  setInput,\n  input,\n  clickHandler,\n  loading\n}, ref) => {\n  console.log(loading);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textfeild-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, inputAttrs, {\n    id: Math.floor(Math.random() * 1000),\n    className: input ? \"focused textfeild-box\" : \"textfeild-box\",\n    onChange: e => setInput(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)),\n    value: input,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", Object.assign({\n    className: \"textfeild-label\"\n  }, labelAttrs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), inputLabel), buttonLabel && !loading ? !loading ? /*#__PURE__*/React.createElement(\"button\", Object.assign({}, buttonAttrs, {\n    onClick: clickHandler,\n    className: \"textfield-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), buttonLabel) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }) : \"\");\n};\n\nconst forwardRefInput = React.forwardRef(TextField);\nexport default forwardRefInput;","map":{"version":3,"sources":["/Users/madhusudanreddysanaiahgari/Documents/Todo-App/src/components/textField/textField.js"],"names":["React","TextField","inputLabel","buttonLabel","inputAttrs","buttonAttrs","labelAttrs","setInput","input","clickHandler","loading","ref","console","log","Math","floor","random","e","target","value","charAt","toUpperCase","slice","forwardRefInput","forwardRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,UAAU,GAAG,iBADf;AAEEC,EAAAA,WAFF;AAGEC,EAAAA,UAHF;AAIEC,EAAAA,WAJF;AAKEC,EAAAA,UALF;AAMEC,EAAAA,QANF;AAOEC,EAAAA,KAPF;AAQEC,EAAAA,YARF;AASEC,EAAAA;AATF,CADgB,EAYhBC,GAZgB,KAab;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,+CACMN,UADN;AAEE,IAAA,EAAE,EAAEU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAFN;AAGE,IAAA,SAAS,EAAER,KAAK,GAAG,uBAAH,GAA6B,eAH/C;AAIE,IAAA,QAAQ,EAAGS,CAAD,IACRV,QAAQ,CACNU,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCJ,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,CAArB,CADnC,CALZ;AASE,IAAA,KAAK,EAAEd,KATT;AAUE,IAAA,GAAG,EAAEG,GAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAaE;AAAO,IAAA,SAAS,EAAC;AAAjB,KAAuCL,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,UADH,CAbF,EAgBGC,WAAW,IAAI,CAACO,OAAhB,GACC,CAACA,OAAD,gBACE,gDACML,WADN;AAEE,IAAA,OAAO,EAAEI,YAFX;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGN,WALH,CADF,gBASE;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVH,GAaC,EA7BJ,CADF;AAkCD,CAjDD;;AAmDA,MAAMoB,eAAe,GAAGvB,KAAK,CAACwB,UAAN,CAAiBvB,SAAjB,CAAxB;AAEA,eAAesB,eAAf","sourcesContent":["import React from \"react\";\nconst TextField = (\n  {\n    inputLabel = \"Enter the value\",\n    buttonLabel,\n    inputAttrs,\n    buttonAttrs,\n    labelAttrs,\n    setInput,\n    input,\n    clickHandler,\n    loading,\n  },\n  ref\n) => {\n  console.log(loading);\n  return (\n    <div className=\"textfeild-wrapper\">\n      <input\n        {...inputAttrs}\n        id={Math.floor(Math.random() * 1000)}\n        className={input ? \"focused textfeild-box\" : \"textfeild-box\"}\n        onChange={(e) =>\n          setInput(\n            e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)\n          )\n        }\n        value={input}\n        ref={ref}\n      />\n      <label className=\"textfeild-label\" {...labelAttrs}>\n        {inputLabel}\n      </label>\n      {buttonLabel && !loading ? (\n        !loading ? (\n          <button\n            {...buttonAttrs}\n            onClick={clickHandler}\n            className=\"textfield-button\"\n          >\n            {buttonLabel}\n          </button>\n        ) : (\n          <i className=\"spinner\"></i>\n        )\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst forwardRefInput = React.forwardRef(TextField);\n\nexport default forwardRefInput;\n"]},"metadata":{},"sourceType":"module"}